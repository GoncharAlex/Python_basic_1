'''
1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт
проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''

my_list = [1, 3.5, True, 'hello', [1, 5, 'nice'], {'name':'Alex', 'surname':'Goncharov'}, {1, 3, 5, 7}, False]

i = 0 # певый способ с помощью цикла while
while i < len(my_list):
    print(type(my_list[i]))
    i = i + 1

for item in my_list: # второй способ с помощью цикла for
    print(type(item))

'''2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются 
элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить 
на своем месте. Для заполнения списка элементов необходимо использовать функцию input().'''

user_list = []
user_choice = ''

while True:
    user_choice = input('Введите элемент списка (для выхода введите "q"): ')
    if user_choice == 'q':
        break
    elif user_choice.isdigit():
        user_choice = int(user_choice)
    user_list.append(user_choice)
print('Ваш список ', user_list)

index = 0 # переменная индекса

for i in range(int(len(user_list) / 2)):
    user_list[index], user_list[index + 1] = user_list[index + 1], user_list[index]
    index = index + 2

print('Измененный список: ', user_list)




'''3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени 
года относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict'''

four_seasons = {
    1:'winter',
    2:'winter',
    3:'spring',
    4:'spring',
    5:'spring',
    6:'summer',
    7:'summer',
    8:'summer',
    9:'autumn',
    10:'autumn',
    11:'autumn',
    12:'winter'
}

user_request = int(input('введите число: '))
print(four_seasons[user_request])

'''4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое 
слово с новой строки. Строки необходимо пронумеровать. Если в слово длинное, выводить 
только первые 10 букв в слове.'''

user_str = input('Введите несколько слов через пробел: ')
result_str = user_str.split() # разбиваю строку на элементы с разделителем пробел,
# чтобы было удобно использовать цикл

for number, word in enumerate(result_str, 1):
    if len(word) > 9:
        word = word[0:9]
    print(number, word)

'''5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. 
У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы 
с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, 
например, my_list = [7, 5, 3, 3, '''

my_list = [7, 5, 3, 3, 2]

user_number = int(input('Введите число рейтинга: '))
max_number = None
min_number = None
# Переменные max_number и min_number понадобятся для того, чтобы записывать в них соответствующие значения
# чтобы в последующем их можно было добавить в определенное место в списке

for i in my_list:
    if i == user_number:
        my_list.insert(my_list.index(i) + 1, user_number)
        break
    elif i > user_number:
        min_number = user_number
    else:
        max_number = user_number

# Такие "макароны" может выглядят не очень прикольно, но я голову сломал, как решить эту задачу по-другому...
if min_number != None:
    my_list.append(min_number)
elif max_number != None:
    my_list.insert(0, max_number)

print(my_list)


'''6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер 
товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). 
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''

'''goods_list = []

goods = {'название': None, 'цена': None, 'количество': None}
goods_name = None
goods_price = None
goods_quantity = None

while True:
    if goods_name or goods_price or goods_quantity == 'q':
        break
    goods_name = input('Введе название товара: ')
    goods['название'] = goods_name
    goods_price = int(input('Введе цену товара: '))
    goods['цена'] = goods_price
    goods_quantity = int(input('Введе количество товара: '))
    goods['количество'] = goods_quantity
    goods_list.append(goods)

print(goods_list)'''
